var canva = document.getElementById("maps");
var ctx = canva.getContext("2d");
var graph = [
    [-37, -135, 105],
    [-37, -107, 105],
    [-37, -90, 105],
    [-34, -90, 105],
    [-21, -107, 105],
    [-21, -90, 105],
    [-18, -90, 105],
    [-26, -90, 105],
    [-4, -107, 105],
    [-4, -90, 105],
    [-1, -90, 105],
    [-9, -90, 105],
    [13, -107, 105],
    [13, -90, 105],
    [18, -90, 105],
    [7, -90, 105],
    [29, -107, 105],
    [29, -90, 105],
    [34, -90, 105],
    [26, -90, 105],
    [46, -107, 105],
    [46, -90, 105],
    [48, -90, 105],
    [43, -90, 105],
    [63, -107, 105],
    [63, -90, 105],
    [155, -90, 105],
    [155, -40, 105],
    [169, -40, 105],
    [189, -90, 105],
    [189, -40, 105],
    [177, -40, 105],
    [57, -90, 105],
    [-80, -135, 105],
    [-80, -107, 105],
    [-80, -90, 105],
    [-85, -90, 105],
    [-98, -107, 105],
    [-98, -90, 105],
    [-93, -90, 105],
    [-103, -90, 105],
    [-116, -107, 105],
    [-116, -90, 105],
    [-111, -90, 105],
    [-120, -90, 105],
    [-134, -107, 105],
    [-134, -90, 105],
    [-129, -90, 105],
    [-139, -90, 105],
    [-152, -107, 105],
    [-152, -90, 105],
    [-147, -90, 105],
    [-156, -90, 105],
    [-170, -107, 105],
    [-170, -90, 105],
    [-164, -90, 105],
    [-175, -90, 105],
    [-187, -107, 105],
    [-187, -90, 105],
    [-183, -90, 105],
    [-188, -90, 105],
    [-222, -107, 105],
    [-222, -90, 105],
    [-220, -90, 105],
    [-220, -68, 105],
    [-220, -44, 105],
    [-220, -21, 105],
    [-220, -5, 105],
    [-220, 9, 105],
    [-220, 25, 105],
    [-220, 42, 105],
    [-220, 59, 105],
    [-220, 75, 105],
    [-220, 93, 105],
    [-220, 110, 105],
    [-220, 124, 105],
    [-205, 124, 105],
    [-205, 121, 105],
    [-188, 124, 105],
    [-188, 110, 105],
    [-188, 93, 105],
    [-185, 93, 105],
    [-171, 110, 105],
    [-171, 93, 105],
    [-150, 93, 105],
    [-177, 93, 105],
    [-138, 110, 105],
    [-138, 93, 105],
    [-134, 93, 105],
    [-142, 93, 105],
    [-122, 110, 105],
    [-122, 93, 105],
    [-126, 93, 105],
    [-105, 110, 105],
    [-105, 93, 105],
    [-82, 93, 105],
    [-71, 110, 105],
    [-71, 93, 105],
    [-67, 93, 105],
    [-74, 93, 105],
    [-54, 110, 105],
    [-54, 93, 105],
    [-37, 93, 105],
    [-59, 93, 105],
    [-21, 110, 105],
    [-21, 93, 105],
    [-29, 93, 105],
    [-21, 136, 105],
    [22, 136, 105],
    [22, 109, 105],
    [22, 93, 105],
    [25, 93, 105],
    [39, 109, 105],
    [39, 93, 105],
    [44, 93, 105],
    [33, 93, 105],
    [56, 109, 105],
    [56, 93, 105],
    [61, 93, 105],
    [52, 93, 105],
    [73, 109, 105],
    [73, 93, 105],
    [80, 93, 105],
    [69, 93, 105],
    [89, 109, 105],
    [89, 93, 105],
    [94, 93, 105],
    [88, 93, 105],
    [106, 109, 105],
    [106, 93, 105],
    [102, 93, 105],
    [123, 109, 105],
    [123, 93, 105],
    [126, 93, 105],
    [139, 109, 105],
    [139, 93, 105],
    [146, 93, 105],
    [135, 93, 105],
    [156, 109, 105],
    [156, 93, 105],
    [160, 93, 105],
    [154, 93, 105],
    [173, 109, 105],
    [173, 93, 105],
    [168, 93, 105],
    [189, 109, 105],
    [189, 93, 105],
    [193, 93, 105],
    [206, 109, 105],
    [206, 93, 105],
    [201, 93, 105],
    [222, 109, 105],
    [222, 77, 105],
    [189, 77, 105],
    [189, 64, 105],
    [189, 60, 105],
    [207, 64, 105],
    [207, 48, 105],
    [207, 31, 105],
    [189, 31, 105],
    [189, 16, 105],
    [189, 48, 105],
    [189, 52, 105],
    [-205, 110, 105],
    [-205, 106, 105],
    [-205, 113, 105],
    [-205, 93, 105],
    [-205, 98, 105],
    [-205, 75, 105],
    [-205, 74, 105],
    [-205, 59, 105],
    [-205, 58, 105],
    [-205, 66, 105],
    [-205, 42, 105],
    [-205, 41, 105],
    [-205, 50, 105],
    [-205, 25, 105],
    [-205, 21, 105],
    [-205, 33, 105],
    [-205, 9, 105],
    [-205, 13, 105],
    [-205, -5, 105],
    [-205, -21, 105],
    [-205, -24, 105],
    [-205, -13, 105],
    [-205, -44, 105],
    [-205, -58, 105],
    [-205, -32, 105],
    [-205, -68, 105],
    [-205, -70, 105],
    [-205, -66, 105],
    [-205, -90, 105],
    [-205, -78, 105],
    [-188, -75, 105],
    [-188, -55, 105],
    [-188, -34, 105],
    [-169, -55, 105],
    [-169, -74, 105],
    [96, -74, 105],
    [96, -58, 105],
    [96, -41, 105],
    [79, -58, 105],
    [79, -74, 105],
    [63, -74, 105],
    [-37, -74, 105],
    [-80, -74, 105],
    [-151, -74, 105],
    [173, 16, 105],
    [173, 32, 105],
    [156, 32, 105],
    [156, 16, 105],
    [173, 16, 105],
    [156, 48, 105],
    [173, 48, 105],
    [173, 77, 105],
    [123, 77, 105],
    [96, 32, 105],
    [-188, 26, 105],
    [-188, 77, 105],
    [-122, 77, 105],
    [22, 56, 105],
    [22, 77, 105],
    [23, 77, 105],
    [-21, 77, 105],
    [-21, 56, 105],
    [22, 56, 105],
    [107, 77, 105],
    [39, 77, 105],
    [-36, 77, 105],
    [-105, 77, 105],
    [-37, -135, 75],
    [-37, -107, 75],
    [-37, -90, 75],
    [-34, -90, 75],
    [-21, -107, 75],
    [-21, -90, 75],
    [-18, -90, 75],
    [-26, -90, 75],
    [-4, -107, 75],
    [-4, -90, 75],
    [-1, -90, 75],
    [-9, -90, 75],
    [13, -107, 75],
    [13, -90, 75],
    [18, -90, 75],
    [7, -90, 75],
    [29, -107, 75],
    [29, -90, 75],
    [34, -90, 75],
    [26, -90, 75],
    [46, -107, 75],
    [46, -90, 75],
    [48, -90, 75],
    [43, -90, 75],
    [63, -107, 75],
    [63, -90, 75],
    [164, -90, 75],
    [164, -107, 75],
    [189, -107, 75],
    [189, -90, 75],
    [189, -74, 75],
    [189, 16, 75],
    [189, 31, 75],
    [207, 31, 75],
    [207, 48, 75],
    [207, 64, 75],
    [207, 77, 75],
    [222, 77, 75],
    [222, 109, 75],
    [206, 109, 75],
    [206, 93, 75],
    [201, 93, 75],
    [189, 109, 75],
    [189, 93, 75],
    [193, 93, 75],
    [173, 109, 75],
    [173, 93, 75],
    [168, 93, 75],
    [156, 109, 75],
    [156, 93, 75],
    [160, 93, 75],
    [154, 93, 75],
    [139, 109, 75],
    [139, 93, 75],
    [146, 93, 75],
    [135, 93, 75],
    [123, 109, 75],
    [123, 93, 75],
    [126, 93, 75],
    [106, 109, 75],
    [106, 93, 75],
    [102, 93, 75],
    [89, 109, 75],
    [89, 93, 75],
    [94, 93, 75],
    [69, 93, 75],
    [56, 109, 75],
    [56, 93, 75],
    [61, 93, 75],
    [33, 93, 75],
    [22, 109, 75],
    [22, 93, 75],
    [25, 93, 75],
    [22, 136, 75],
    [-21, 136, 75],
    [-21, 110, 75],
    [-21, 93, 75],
    [-29, 93, 75],
    [-38, 110, 75],
    [-38, 93, 75],
    [-37, 93, 75],
    [-42, 93, 75],
    [-54, 110, 75],
    [-54, 93, 75],
    [-50, 93, 75],
    [-59, 93, 75],
    [-71, 110, 75],
    [-71, 93, 75],
    [-67, 93, 75],
    [-74, 93, 75],
    [-88, 110, 75],
    [-88, 93, 75],
    [-82, 93, 75],
    [-93, 93, 75],
    [-105, 110, 75],
    [-105, 93, 75],
    [-101, 93, 75],
    [-122, 110, 75],
    [-122, 93, 75],
    [-126, 93, 75],
    [-138, 110, 75],
    [-138, 93, 75],
    [-134, 93, 75],
    [-142, 93, 75],
    [-171, 110, 75],
    [-171, 93, 75],
    [-150, 93, 75],
    [-177, 93, 75],
    [-188, 110, 75],
    [-188, 93, 75],
    [-185, 93, 75],
    [-188, 127, 75],
    [-220, 127, 75],
    [-220, 110, 75],
    [-205, 110, 75],
    [-205, 93, 75],
    [-220, 93, 75],
    [-220, 75, 75],
    [-220, 59, 75],
    [-220, 42, 75],
    [-220, 25, 75],
    [-220, 9, 75],
    [-220, -5, 75],
    [-220, -21, 75],
    [-220, -44, 75],
    [-220, -68, 75],
    [-220, -90, 75],
    [-205, -90, 75],
    [-205, -78, 75],
    [-222, -90, 75],
    [-222, -107, 75],
    [-187, -107, 75],
    [-187, -90, 75],
    [-183, -90, 75],
    [-188, -90, 75],
    [-170, -107, 75],
    [-170, -90, 75],
    [-164, -90, 75],
    [-175, -90, 75],
    [-152, -107, 75],
    [-152, -90, 75],
    [-147, -90, 75],
    [-156, -90, 75],
    [-134, -107, 75],
    [-134, -90, 75],
    [-129, -90, 75],
    [-139, -90, 75],
    [-116, -107, 75],
    [-116, -90, 75],
    [-111, -90, 75],
    [-120, -90, 75],
    [-98, -107, 75],
    [-98, -90, 75],
    [-93, -90, 75],
    [-103, -90, 75],
    [-80, -107, 75],
    [-80, -135, 75],
    [-37, -135, 75],
    [-80, -90, 75],
    [-85, -90, 75],
    [-205, -68, 75],
    [-205, -70, 75],
    [-205, -66, 75],
    [-205, -44, 75],
    [-205, -58, 75],
    [-205, -32, 75],
    [-205, -21, 75],
    [-205, -24, 75],
    [-205, -13, 75],
    [-205, -5, 75],
    [-205, 9, 75],
    [-205, 13, 75],
    [-205, 25, 75],
    [-205, 21, 75],
    [-205, 33, 75],
    [-205, 42, 75],
    [-205, 41, 75],
    [-205, 50, 75],
    [-205, 59, 75],
    [-205, 58, 75],
    [-205, 66, 75],
    [-205, 75, 75],
    [-205, 74, 75],
    [-203, 110, 75],
    [-190, 110, 75],
    [189, 77, 75],
    [189, 74, 75],
    [189, 64, 75],
    [189, 60, 75],
    [189, 66, 75],
    [189, 48, 75],
    [189, 52, 75],
    [164, 16, 75],
    [128, -74, 75],
    [128, 16, 75],
    [150, 16, 75],
    [173, -90, 75],
    [57, -90, 75],
    [-188, -75, 75],
    [-188, -55, 75],
    [-188, 77, 75],
    [173, 77, 75],
    [173, 32, 75],
    [96, 32, 75],
    [96, -58, 75],
    [96, -74, 75],
    [79, -58, 75],
    [79, -74, 75],
    [-169, -74, 75],
    [-169, -55, 75],
    [-188, -55, 75],
    [-37, -135, 45],
    [-37, -107, 45],
    [-37, -90, 45],
    [-34, -90, 45],
    [-21, -107, 45],
    [-21, -90, 45],
    [-18, -90, 45],
    [-26, -90, 45],
    [-4, -107, 45],
    [-4, -90, 45],
    [-1, -90, 45],
    [-9, -90, 45],
    [13, -107, 45],
    [13, -90, 45],
    [18, -90, 45],
    [7, -90, 45],
    [29, -107, 45],
    [29, -90, 45],
    [34, -90, 45],
    [26, -90, 45],
    [46, -107, 45],
    [46, -90, 45],
    [48, -90, 45],
    [43, -90, 45],
    [63, -107, 45],
    [63, -90, 45],
    [164, -90, 45],
    [164, -107, 45],
    [189, -107, 45],
    [189, -90, 45],
    [189, -74, 45],
    [189, -1, 45],
    [189, 16, 45],
    [189, 31, 45],
    [207, 31, 45],
    [207, 48, 45],
    [207, 64, 45],
    [207, 77, 45],
    [222, 77, 45],
    [222, 109, 45],
    [206, 109, 45],
    [206, 93, 45],
    [201, 93, 45],
    [189, 109, 45],
    [189, 93, 45],
    [193, 93, 45],
    [173, 109, 45],
    [173, 93, 45],
    [168, 93, 45],
    [156, 109, 45],
    [156, 93, 45],
    [160, 93, 45],
    [154, 93, 45],
    [139, 109, 45],
    [139, 93, 45],
    [146, 93, 45],
    [135, 93, 45],
    [123, 109, 45],
    [123, 93, 45],
    [126, 93, 45],
    [106, 109, 45],
    [106, 93, 45],
    [102, 93, 45],
    [89, 109, 45],
    [89, 93, 45],
    [94, 93, 45],
    [88, 93, 45],
    [73, 109, 45],
    [73, 93, 45],
    [80, 93, 45],
    [69, 93, 45],
    [56, 109, 45],
    [56, 93, 45],
    [61, 93, 45],
    [52, 93, 45],
    [39, 109, 45],
    [39, 93, 45],
    [44, 93, 45],
    [33, 93, 45],
    [22, 109, 45],
    [22, 93, 45],
    [25, 93, 45],
    [22, 136, 45],
    [-21, 136, 45],
    [-21, 110, 45],
    [-21, 93, 45],
    [-29, 93, 45],
    [-38, 110, 45],
    [-38, 93, 45],
    [-37, 93, 45],
    [-42, 93, 45],
    [-54, 110, 45],
    [-54, 93, 45],
    [-50, 93, 45],
    [-59, 93, 45],
    [-71, 110, 45],
    [-71, 93, 45],
    [-67, 93, 45],
    [-74, 93, 45],
    [-88, 110, 45],
    [-88, 93, 45],
    [-82, 93, 45],
    [-93, 93, 45],
    [-105, 110, 45],
    [-105, 93, 45],
    [-101, 93, 45],
    [-122, 110, 45],
    [-122, 93, 45],
    [-126, 93, 45],
    [-138, 110, 45],
    [-138, 93, 45],
    [-134, 93, 45],
    [-142, 93, 45],
    [-171, 110, 45],
    [-171, 93, 45],
    [-150, 93, 45],
    [-177, 93, 45],
    [-188, 110, 45],
    [-188, 93, 45],
    [-185, 93, 45],
    [-188, 127, 45],
    [-205, 127, 45],
    [-205, 122, 45],
    [-220, 127, 45],
    [-220, 110, 45],
    [-220, 93, 45],
    [-220, 75, 45],
    [-220, 59, 45],
    [-220, 42, 45],
    [-220, 25, 45],
    [-220, 9, 45],
    [-220, -5, 45],
    [-220, -21, 45],
    [-220, -44, 45],
    [-220, -68, 45],
    [-220, -90, 45],
    [-205, -90, 45],
    [-205, -78, 45],
    [-222, -90, 45],
    [-222, -107, 45],
    [-187, -107, 45],
    [-187, -90, 45],
    [-183, -90, 45],
    [-188, -90, 45],
    [-170, -107, 45],
    [-170, -90, 45],
    [-164, -90, 45],
    [-175, -90, 45],
    [-152, -107, 45],
    [-152, -90, 45],
    [-147, -90, 45],
    [-156, -90, 45],
    [-134, -107, 45],
    [-134, -90, 45],
    [-129, -90, 45],
    [-139, -90, 45],
    [-116, -107, 45],
    [-116, -90, 45],
    [-111, -90, 45],
    [-120, -90, 45],
    [-98, -107, 45],
    [-98, -90, 45],
    [-93, -90, 45],
    [-103, -90, 45],
    [-80, -107, 45],
    [-80, -135, 45],
    [-37, -135, 45],
    [-80, -90, 45],
    [-85, -90, 45],
    [-205, -68, 45],
    [-205, -70, 45],
    [-205, -66, 45],
    [-205, -44, 45],
    [-205, -58, 45],
    [-205, -32, 45],
    [-205, -21, 45],
    [-205, -24, 45],
    [-205, -13, 45],
    [-205, -5, 45],
    [-205, 9, 45],
    [-205, 13, 45],
    [-205, 25, 45],
    [-205, 21, 45],
    [-205, 33, 45],
    [-205, 42, 45],
    [-205, 41, 45],
    [-205, 50, 45],
    [-205, 59, 45],
    [-205, 58, 45],
    [-205, 66, 45],
    [-205, 75, 45],
    [-205, 74, 45],
    [-205, 93, 45],
    [-205, 96, 45],
    [-205, 110, 45],
    [-205, 106, 45],
    [-205, 114, 45],
    [189, 77, 45],
    [189, 74, 45],
    [189, 64, 45],
    [189, 60, 45],
    [189, 66, 45],
    [189, 48, 45],
    [189, 52, 45],
    [187, 16, 45],
    [160, -1, 45],
    [160, 16, 45],
    [179, 16, 45],
    [157, 16, 45],
    [128, -1, 45],
    [128, -51, 45],
    [128, 16, 45],
    [149, 16, 45],
    [128, -74, 45],
    [128, -64, 45],
    [173, -90, 45],
    [57, -90, 45],
    [-188, -75, 45],
    [-188, -55, 45],
    [-188, 77, 45],
    [173, 77, 45],
    [173, 32, 45],
    [96, 32, 45],
    [96, -24, 45],
    [96, -58, 45],
    [96, -74, 45],
    [110, -74, 45],
    [110, -64, 45],
    [79, -58, 45],
    [79, -74, 45],
    [-169, -74, 45],
    [-169, -55, 45],
    [-188, -55, 45],
    [110, -24, 45],
    [110, -25, 45],
    [110, -51, 45],
    [110, -37, 45],
    [-37, -135, 15],
    [-37, -107, 15],
    [-37, -90, 15],
    [-34, -90, 15],
    [-21, -107, 15],
    [-21, -90, 15],
    [-18, -90, 15],
    [-26, -90, 15],
    [-4, -107, 15],
    [-4, -90, 15],
    [-1, -90, 15],
    [-9, -90, 15],
    [13, -107, 15],
    [13, -90, 15],
    [18, -90, 15],
    [7, -90, 15],
    [29, -107, 15],
    [29, -90, 15],
    [34, -90, 15],
    [26, -90, 15],
    [46, -107, 15],
    [46, -90, 15],
    [48, -90, 15],
    [43, -90, 15],
    [63, -107, 15],
    [63, -90, 15],
    [128, -90, 15],
    [128, -107, 15],
    [158, -107, 15],
    [158, -90, 15],
    [164, -90, 15],
    [164, -107, 15],
    [189, -107, 15],
    [189, -90, 15],
    [189, -74, 15],
    [189, -52, 15],
    [189, -29, 15],
    [189, -6, 15],
    [189, 16, 15],
    [189, 31, 15],
    [207, 31, 15],
    [207, 48, 15],
    [207, 64, 15],
    [207, 77, 15],
    [222, 77, 15],
    [222, 109, 15],
    [206, 109, 15],
    [206, 93, 15],
    [201, 93, 15],
    [189, 109, 15],
    [189, 93, 15],
    [193, 93, 15],
    [173, 109, 15],
    [173, 93, 15],
    [168, 93, 15],
    [156, 109, 15],
    [156, 93, 15],
    [160, 93, 15],
    [154, 93, 15],
    [139, 109, 15],
    [139, 93, 15],
    [146, 93, 15],
    [135, 93, 15],
    [123, 109, 15],
    [123, 93, 15],
    [126, 93, 15],
    [106, 109, 15],
    [106, 93, 15],
    [102, 93, 15],
    [89, 109, 15],
    [89, 93, 15],
    [94, 93, 15],
    [88, 93, 15],
    [73, 109, 15],
    [73, 93, 15],
    [80, 93, 15],
    [69, 93, 15],
    [56, 109, 15],
    [56, 93, 15],
    [61, 93, 15],
    [52, 93, 15],
    [39, 109, 15],
    [39, 93, 15],
    [44, 93, 15],
    [33, 93, 15],
    [22, 109, 15],
    [22, 93, 15],
    [25, 93, 15],
    [22, 136, 15],
    [-21, 136, 15],
    [-21, 110, 15],
    [-21, 93, 15],
    [-29, 93, 15],
    [-38, 110, 15],
    [-38, 93, 15],
    [-37, 93, 15],
    [-42, 93, 15],
    [-54, 110, 15],
    [-54, 93, 15],
    [-50, 93, 15],
    [-59, 93, 15],
    [-71, 110, 15],
    [-71, 93, 15],
    [-67, 93, 15],
    [-74, 93, 15],
    [-88, 110, 15],
    [-88, 93, 15],
    [-82, 93, 15],
    [-93, 93, 15],
    [-105, 110, 15],
    [-105, 93, 15],
    [-101, 93, 15],
    [-122, 110, 15],
    [-122, 93, 15],
    [-126, 93, 15],
    [-138, 110, 15],
    [-138, 93, 15],
    [-134, 93, 15],
    [-142, 93, 15],
    [-155, 110, 15],
    [-155, 93, 15],
    [-150, 93, 15],
    [-160, 93, 15],
    [-171, 110, 15],
    [-171, 93, 15],
    [-168, 93, 15],
    [-177, 93, 15],
    [-188, 110, 15],
    [-188, 93, 15],
    [-185, 93, 15],
    [-188, 127, 15],
    [-220, 127, 15],
    [-220, 110, 15],
    [-205, 110, 15],
    [-205, 93, 15],
    [-220, 93, 15],
    [-220, 75, 15],
    [-220, 59, 15],
    [-220, 42, 15],
    [-220, 25, 15],
    [-220, 9, 15],
    [-220, -5, 15],
    [-188, -5, 15],
    [-188, -55, 15],
    [-188, -90, 15],
    [-187, -90, 15],
    [-187, -107, 15],
    [-170, -107, 15],
    [-170, -90, 15],
    [-164, -90, 15],
    [-175, -90, 15],
    [-152, -107, 15],
    [-152, -90, 15],
    [-147, -90, 15],
    [-156, -90, 15],
    [-134, -107, 15],
    [-134, -90, 15],
    [-129, -90, 15],
    [-139, -90, 15],
    [-116, -107, 15],
    [-116, -90, 15],
    [-111, -90, 15],
    [-120, -90, 15],
    [-98, -107, 15],
    [-98, -90, 15],
    [-93, -90, 15],
    [-103, -90, 15],
    [-80, -107, 15],
    [-80, -135, 15],
    [-37, -135, 15],
    [-80, -90, 15],
    [-85, -90, 15],
    [-222, -107, 15],
    [-222, -90, 15],
    [-188, -90, 15],
    [-187, -90, 15],
    [-183, -90, 15],
    [-169, -55, 15],
    [-169, -74, 15],
    [79, -74, 15],
    [79, -58, 15],
    [96, -58, 15],
    [96, -74, 15],
    [96, 32, 15],
    [173, 32, 15],
    [173, 77, 15],
    [-188, 77, 15],
    [-188, -5, 15],
    [-205, 9, 15],
    [-205, 13, 15],
    [-205, 25, 15],
    [-205, 21, 15],
    [-205, 33, 15],
    [-205, 42, 15],
    [-205, 41, 15],
    [-205, 50, 15],
    [-205, 59, 15],
    [-205, 58, 15],
    [-205, 66, 15],
    [-205, 75, 15],
    [-205, 74, 15],
    [-203, 110, 15],
    [-190, 110, 15],
    [189, 77, 15],
    [189, 74, 15],
    [189, 64, 15],
    [189, 60, 15],
    [189, 66, 15],
    [189, 48, 15],
    [189, 52, 15],
    [152, 16, 15],
    [152, 9, 15],
    [152, -6, 15],
    [152, -9, 15],
    [152, 1, 15],
    [152, -29, 15],
    [152, -31, 15],
    [152, -17, 15],
    [152, -52, 15],
    [152, -53, 15],
    [152, -39, 15],
    [152, -74, 15],
    [173, -90, 15],
    [139, -90, 15],
    [57, -90, 15],
    [141, -74, 15],
    [141, -37, 15],
    [141, 0, 15],
    [141, 16, 15],
    [116, 0, 15],
    [116, -7, 15],
    [116, -37, 15],
    [116, -51, 15],
    [116, -34, 15],
    [116, -74, 15],
    [116, -64, 15],
    [152, -66, 15],
    [152, -61, 15],
    [116, -26, 15],
    [116, -15, 15],
    [189, -90, -15],
    [189, 16, -15],
    [189, 31, -15],
    [207, 31, -15],
    [207, 48, -15],
    [207, 64, -15],
    [207, 77, -15],
    [222, 77, -15],
    [222, 109, -15],
    [206, 109, -15],
    [206, 93, -15],
    [201, 93, -15],
    [189, 109, -15],
    [189, 93, -15],
    [193, 93, -15],
    [173, 109, -15],
    [173, 93, -15],
    [168, 93, -15],
    [156, 109, -15],
    [156, 93, -15],
    [160, 93, -15],
    [154, 93, -15],
    [139, 109, -15],
    [139, 93, -15],
    [146, 93, -15],
    [135, 93, -15],
    [123, 109, -15],
    [123, 93, -15],
    [126, 93, -15],
    [106, 109, -15],
    [106, 93, -15],
    [102, 93, -15],
    [89, 109, -15],
    [89, 93, -15],
    [94, 93, -15],
    [88, 93, -15],
    [73, 109, -15],
    [73, 93, -15],
    [80, 93, -15],
    [69, 93, -15],
    [56, 109, -15],
    [56, 93, -15],
    [61, 93, -15],
    [52, 93, -15],
    [39, 109, -15],
    [39, 93, -15],
    [44, 93, -15],
    [33, 93, -15],
    [22, 109, -15],
    [22, 93, -15],
    [25, 93, -15],
    [22, 136, -15],
    [-21, 136, -15],
    [-21, 110, -15],
    [-21, 93, -15],
    [-105, 110, -15],
    [-105, 93, -15],
    [-122, 110, -15],
    [-122, 93, -15],
    [-126, 93, -15],
    [-188, 110, -15],
    [-188, 93, -15],
    [-188, 77, -15],
    [-105, 77, -15],
    [-105, 84, -15],
    [-21, 77, -15],
    [-21, 84, -15],
    [173, 77, -15],
    [173, 32, -15],
    [96, 32, -15],
    [96, 16, -15],
    [96, -90, -15],
    [189, -90, -15],
    [128, 16, -15],
    [-185, 93, -15],
    [189, 77, -15],
    [189, 74, -15],
    [189, 64, -15],
    [189, 60, -15],
    [189, 66, -15],
    [189, 48, -15],
    [189, 52, -15],
    [146, 16, -15],
    [-134, 93, -15],
    [-177, 93, -15],
    [189, -90, -45],
    [189, 16, -45],
    [189, 31, -45],
    [207, 31, -45],
    [207, 48, -45],
    [207, 64, -45],
    [207, 77, -45],
    [189, 77, -45],
    [189, 74, -45],
    [173, 77, -45],
    [173, 32, -45],
    [96, 32, -45],
    [96, 16, -45],
    [96, -90, -45],
    [189, -90, -45],
    [130, 16, -45],
    [189, 64, -45],
    [189, 60, -45],
    [189, 66, -45],
    [189, 48, -45],
    [189, 52, -45],
    [145, 16, -45],
    [189, -90, -75],
    [189, 16, -75],
    [189, 31, -75],
    [207, 31, -75],
    [207, 48, -75],
    [207, 64, -75],
    [207, 77, -75],
    [189, 77, -75],
    [189, 74, -75],
    [173, 77, -75],
    [173, 32, -75],
    [96, 32, -75],
    [96, 16, -75],
    [96, -90, -75],
    [189, -90, -75],
    [189, 16, -75],
    [189, 64, -75],
    [189, 60, -75],
    [189, 66, -75],
    [189, 48, -75],
    [189, 52, -75],
    [189, -90, -105],
    [189, 16, -105],
    [189, 31, -105],
    [207, 31, -105],
    [207, 48, -105],
    [207, 64, -105],
    [207, 77, -105],
    [189, 77, -105],
    [189, 74, -105],
    [173, 77, -105],
    [173, 32, -105],
    [96, 32, -105],
    [96, 16, -105],
    [96, -90, -105],
    [189, -90, -105],
    [130, 16, -105],
    [189, 64, -105],
    [189, 60, -105],
    [189, 66, -105],
    [189, 48, -105],
    [189, 52, -105],
    [145, 16, -105],
];
var line = [
    [1, 0],
    [2, 1],
    [3, 2],
    [4, 1],
    [5, 4],
    [6, 5],
    [7, 5],
    [8, 4],
    [9, 8],
    [10, 9],
    [11, 9],
    [12, 8],
    [13, 12],
    [14, 13],
    [15, 13],
    [16, 12],
    [17, 16],
    [18, 17],
    [19, 17],
    [20, 16],
    [21, 20],
    [22, 21],
    [23, 21],
    [24, 20],
    [25, 24],
    [26, 25],
    [27, 26],
    [28, 27],
    [29, 26],
    [30, 29],
    [31, 30],
    [32, 25],
    [33, 0],
    [34, 33],
    [35, 34],
    [36, 35],
    [37, 34],
    [38, 37],
    [39, 38],
    [40, 38],
    [41, 37],
    [42, 41],
    [43, 42],
    [44, 42],
    [45, 41],
    [46, 45],
    [47, 46],
    [48, 46],
    [49, 45],
    [50, 49],
    [51, 50],
    [52, 50],
    [53, 49],
    [54, 53],
    [55, 54],
    [56, 54],
    [57, 53],
    [58, 57],
    [59, 58],
    [60, 58],
    [61, 57],
    [62, 61],
    [63, 62],
    [64, 63],
    [65, 64],
    [66, 65],
    [67, 66],
    [68, 67],
    [69, 68],
    [70, 69],
    [71, 70],
    [72, 71],
    [73, 72],
    [74, 73],
    [75, 74],
    [76, 75],
    [77, 76],
    [78, 76],
    [79, 78],
    [80, 79],
    [81, 80],
    [82, 79],
    [83, 82],
    [84, 83],
    [85, 83],
    [86, 82],
    [87, 86],
    [88, 87],
    [89, 87],
    [90, 86],
    [91, 90],
    [92, 91],
    [93, 90],
    [94, 93],
    [95, 94],
    [96, 93],
    [97, 96],
    [98, 97],
    [99, 97],
    [100, 96],
    [101, 100],
    [102, 101],
    [103, 101],
    [104, 100],
    [105, 104],
    [106, 105],
    [107, 104],
    [108, 107],
    [109, 108],
    [110, 109],
    [111, 110],
    [112, 109],
    [113, 112],
    [114, 113],
    [115, 113],
    [116, 112],
    [117, 116],
    [118, 117],
    [119, 117],
    [120, 116],
    [121, 120],
    [122, 121],
    [123, 121],
    [124, 120],
    [125, 124],
    [126, 125],
    [127, 125],
    [128, 124],
    [129, 128],
    [130, 129],
    [131, 128],
    [132, 131],
    [133, 132],
    [134, 131],
    [135, 134],
    [136, 135],
    [137, 135],
    [138, 134],
    [139, 138],
    [140, 139],
    [141, 139],
    [142, 138],
    [143, 142],
    [144, 143],
    [145, 142],
    [146, 145],
    [147, 146],
    [148, 145],
    [149, 148],
    [150, 149],
    [151, 148],
    [152, 151],
    [153, 152],
    [154, 153],
    [155, 154],
    [156, 154],
    [157, 156],
    [158, 157],
    [159, 158],
    [160, 159],
    [161, 157],
    [162, 161],
    [163, 74],
    [164, 163],
    [165, 163],
    [166, 73],
    [167, 166],
    [168, 72],
    [169, 168],
    [170, 71],
    [171, 170],
    [172, 170],
    [173, 70],
    [174, 173],
    [175, 173],
    [176, 69],
    [177, 176],
    [178, 176],
    [179, 68],
    [180, 179],
    [181, 67],
    [182, 66],
    [183, 182],
    [184, 182],
    [185, 65],
    [186, 185],
    [187, 185],
    [188, 64],
    [189, 188],
    [190, 188],
    [191, 63],
    [192, 191],
    [194, 193],
    [195, 194],
    [196, 194],
    [197, 196],
    [199, 198],
    [200, 199],
    [201, 199],
    [202, 201],
    [204, 203],
    [206, 205],
    [208, 207],
    [209, 208],
    [210, 209],
    [211, 210],
    [212, 209],
    [213, 212],
    [214, 213],
    [215, 214],
    [216, 209],
    [218, 217],
    [219, 218],
    [221, 220],
    [222, 221],
    [223, 221],
    [224, 223],
    [225, 224],
    [227, 226],
    [229, 228],
    [231, 230],
    [232, 231],
    [233, 232],
    [234, 231],
    [235, 234],
    [236, 235],
    [237, 235],
    [238, 234],
    [239, 238],
    [240, 239],
    [241, 239],
    [242, 238],
    [243, 242],
    [244, 243],
    [245, 243],
    [246, 242],
    [247, 246],
    [248, 247],
    [249, 247],
    [250, 246],
    [251, 250],
    [252, 251],
    [253, 251],
    [254, 250],
    [255, 254],
    [256, 255],
    [257, 256],
    [258, 257],
    [259, 258],
    [260, 259],
    [261, 260],
    [262, 261],
    [263, 262],
    [264, 263],
    [265, 264],
    [266, 265],
    [267, 266],
    [268, 267],
    [269, 268],
    [270, 269],
    [271, 270],
    [272, 269],
    [273, 272],
    [274, 273],
    [275, 272],
    [276, 275],
    [277, 276],
    [278, 275],
    [279, 278],
    [280, 279],
    [281, 279],
    [282, 278],
    [283, 282],
    [284, 283],
    [285, 283],
    [286, 282],
    [287, 286],
    [288, 287],
    [289, 286],
    [290, 289],
    [291, 290],
    [292, 289],
    [293, 292],
    [294, 293],
    [295, 293],
    [296, 292],
    [297, 296],
    [298, 297],
    [299, 297],
    [300, 296],
    [301, 300],
    [302, 301],
    [303, 300],
    [304, 303],
    [305, 304],
    [306, 305],
    [307, 306],
    [308, 305],
    [309, 308],
    [310, 309],
    [311, 309],
    [312, 308],
    [313, 312],
    [314, 313],
    [315, 313],
    [316, 312],
    [317, 316],
    [318, 317],
    [319, 317],
    [320, 316],
    [321, 320],
    [322, 321],
    [323, 321],
    [324, 320],
    [325, 324],
    [326, 325],
    [327, 324],
    [328, 327],
    [329, 328],
    [330, 327],
    [331, 330],
    [332, 331],
    [333, 331],
    [334, 330],
    [335, 334],
    [336, 335],
    [337, 335],
    [338, 334],
    [339, 338],
    [340, 339],
    [341, 338],
    [342, 341],
    [343, 342],
    [344, 343],
    [345, 344],
    [346, 345],
    [347, 346],
    [348, 347],
    [349, 348],
    [350, 349],
    [351, 350],
    [352, 351],
    [353, 352],
    [354, 353],
    [355, 354],
    [356, 355],
    [357, 356],
    [358, 357],
    [359, 356],
    [360, 359],
    [361, 360],
    [362, 361],
    [363, 362],
    [364, 362],
    [365, 361],
    [366, 365],
    [367, 366],
    [368, 366],
    [369, 365],
    [370, 369],
    [371, 370],
    [372, 370],
    [373, 369],
    [374, 373],
    [375, 374],
    [376, 374],
    [377, 373],
    [378, 377],
    [379, 378],
    [380, 378],
    [381, 377],
    [382, 381],
    [383, 382],
    [384, 382],
    [385, 381],
    [386, 385],
    [387, 386],
    [388, 385],
    [389, 388],
    [390, 355],
    [391, 390],
    [392, 390],
    [393, 354],
    [394, 393],
    [395, 393],
    [396, 353],
    [397, 396],
    [398, 396],
    [399, 352],
    [400, 351],
    [401, 400],
    [402, 350],
    [403, 402],
    [404, 402],
    [405, 349],
    [406, 405],
    [407, 405],
    [408, 348],
    [409, 408],
    [410, 408],
    [411, 347],
    [412, 411],
    [413, 344],
    [414, 338],
    [415, 266],
    [416, 415],
    [417, 265],
    [418, 417],
    [419, 417],
    [420, 264],
    [421, 420],
    [422, 261],
    [423, 260],
    [424, 423],
    [425, 424],
    [426, 259],
    [427, 255],
    [429, 428],
    [430, 429],
    [431, 430],
    [432, 431],
    [433, 432],
    [434, 433],
    [435, 434],
    [436, 434],
    [437, 436],
    [438, 437],
    [439, 438],
    [440, 439],
    [442, 441],
    [443, 442],
    [444, 443],
    [445, 442],
    [446, 445],
    [447, 446],
    [448, 446],
    [449, 445],
    [450, 449],
    [451, 450],
    [452, 450],
    [453, 449],
    [454, 453],
    [455, 454],
    [456, 454],
    [457, 453],
    [458, 457],
    [459, 458],
    [460, 458],
    [461, 457],
    [462, 461],
    [463, 462],
    [464, 462],
    [465, 461],
    [466, 465],
    [467, 466],
    [468, 467],
    [469, 468],
    [470, 469],
    [471, 470],
    [472, 471],
    [473, 472],
    [474, 473],
    [475, 474],
    [476, 475],
    [477, 476],
    [478, 477],
    [479, 478],
    [480, 479],
    [481, 480],
    [482, 481],
    [483, 482],
    [484, 481],
    [485, 484],
    [486, 485],
    [487, 484],
    [488, 487],
    [489, 488],
    [490, 487],
    [491, 490],
    [492, 491],
    [493, 491],
    [494, 490],
    [495, 494],
    [496, 495],
    [497, 495],
    [498, 494],
    [499, 498],
    [500, 499],
    [501, 498],
    [502, 501],
    [503, 502],
    [504, 501],
    [505, 504],
    [506, 505],
    [507, 505],
    [508, 504],
    [509, 508],
    [510, 509],
    [511, 509],
    [512, 508],
    [513, 512],
    [514, 513],
    [515, 513],
    [516, 512],
    [517, 516],
    [518, 517],
    [519, 517],
    [520, 516],
    [521, 520],
    [522, 521],
    [523, 520],
    [524, 523],
    [525, 524],
    [526, 525],
    [527, 526],
    [528, 525],
    [529, 528],
    [530, 529],
    [531, 529],
    [532, 528],
    [533, 532],
    [534, 533],
    [535, 533],
    [536, 532],
    [537, 536],
    [538, 537],
    [539, 537],
    [540, 536],
    [541, 540],
    [542, 541],
    [543, 541],
    [544, 540],
    [545, 544],
    [546, 545],
    [547, 544],
    [548, 547],
    [549, 548],
    [550, 547],
    [551, 550],
    [552, 551],
    [553, 551],
    [554, 550],
    [555, 554],
    [556, 555],
    [557, 555],
    [558, 554],
    [559, 558],
    [560, 559],
    [561, 558],
    [562, 561],
    [563, 562],
    [564, 562],
    [565, 564],
    [566, 565],
    [567, 566],
    [568, 567],
    [569, 568],
    [570, 569],
    [571, 570],
    [572, 571],
    [573, 572],
    [574, 573],
    [575, 574],
    [576, 575],
    [577, 576],
    [578, 577],
    [579, 576],
    [580, 579],
    [581, 580],
    [582, 581],
    [583, 582],
    [584, 582],
    [585, 581],
    [586, 585],
    [587, 586],
    [588, 586],
    [589, 585],
    [590, 589],
    [591, 590],
    [592, 590],
    [593, 589],
    [594, 593],
    [595, 594],
    [596, 594],
    [597, 593],
    [598, 597],
    [599, 598],
    [600, 598],
    [601, 597],
    [602, 601],
    [603, 602],
    [604, 602],
    [605, 601],
    [606, 605],
    [607, 606],
    [608, 605],
    [609, 608],
    [610, 575],
    [611, 610],
    [612, 610],
    [613, 574],
    [614, 613],
    [615, 613],
    [616, 573],
    [617, 616],
    [618, 616],
    [619, 572],
    [620, 571],
    [621, 620],
    [622, 570],
    [623, 622],
    [624, 622],
    [625, 569],
    [626, 625],
    [627, 625],
    [628, 568],
    [629, 628],
    [630, 628],
    [631, 567],
    [632, 631],
    [633, 566],
    [634, 633],
    [635, 565],
    [636, 635],
    [637, 635],
    [638, 478],
    [639, 638],
    [640, 477],
    [641, 640],
    [642, 640],
    [643, 476],
    [644, 643],
    [645, 473],
    [646, 472],
    [647, 646],
    [648, 647],
    [649, 647],
    [650, 646],
    [651, 650],
    [652, 650],
    [653, 652],
    [654, 471],
    [655, 654],
    [656, 470],
    [657, 466],
    [659, 658],
    [660, 659],
    [661, 660],
    [662, 661],
    [663, 662],
    [664, 663],
    [665, 664],
    [666, 665],
    [667, 666],
    [668, 667],
    [669, 665],
    [670, 669],
    [671, 670],
    [672, 671],
    [673, 672],
    [674, 664],
    [675, 674],
    [677, 676],
    [679, 678],
    [680, 679],
    [681, 680],
    [682, 679],
    [683, 682],
    [684, 683],
    [685, 683],
    [686, 682],
    [687, 686],
    [688, 687],
    [689, 687],
    [690, 686],
    [691, 690],
    [692, 691],
    [693, 691],
    [694, 690],
    [695, 694],
    [696, 695],
    [697, 695],
    [698, 694],
    [699, 698],
    [700, 699],
    [701, 699],
    [702, 698],
    [703, 702],
    [704, 703],
    [705, 704],
    [706, 705],
    [707, 706],
    [708, 707],
    [709, 708],
    [710, 709],
    [711, 710],
    [712, 711],
    [713, 712],
    [714, 713],
    [715, 714],
    [716, 715],
    [717, 716],
    [718, 717],
    [719, 718],
    [720, 719],
    [721, 720],
    [722, 721],
    [723, 722],
    [724, 723],
    [725, 724],
    [726, 725],
    [727, 724],
    [728, 727],
    [729, 728],
    [730, 727],
    [731, 730],
    [732, 731],
    [733, 730],
    [734, 733],
    [735, 734],
    [736, 734],
    [737, 733],
    [738, 737],
    [739, 738],
    [740, 738],
    [741, 737],
    [742, 741],
    [743, 742],
    [744, 741],
    [745, 744],
    [746, 745],
    [747, 744],
    [748, 747],
    [749, 748],
    [750, 748],
    [751, 747],
    [752, 751],
    [753, 752],
    [754, 752],
    [755, 751],
    [756, 755],
    [757, 756],
    [758, 756],
    [759, 755],
    [760, 759],
    [761, 760],
    [762, 760],
    [763, 759],
    [764, 763],
    [765, 764],
    [766, 763],
    [767, 766],
    [768, 767],
    [769, 768],
    [770, 769],
    [771, 768],
    [772, 771],
    [773, 772],
    [774, 772],
    [775, 771],
    [776, 775],
    [777, 776],
    [778, 776],
    [779, 775],
    [780, 779],
    [781, 780],
    [782, 780],
    [783, 779],
    [784, 783],
    [785, 784],
    [786, 784],
    [787, 783],
    [788, 787],
    [789, 788],
    [790, 787],
    [791, 790],
    [792, 791],
    [793, 790],
    [794, 793],
    [795, 794],
    [796, 794],
    [797, 793],
    [798, 797],
    [799, 798],
    [800, 798],
    [801, 797],
    [802, 801],
    [803, 802],
    [804, 802],
    [805, 801],
    [806, 805],
    [807, 806],
    [808, 805],
    [809, 808],
    [810, 809],
    [811, 810],
    [812, 811],
    [813, 812],
    [814, 813],
    [815, 814],
    [816, 815],
    [817, 816],
    [818, 817],
    [819, 818],
    [820, 819],
    [821, 820],
    [822, 821],
    [823, 822],
    [824, 823],
    [825, 824],
    [826, 825],
    [827, 826],
    [828, 826],
    [829, 825],
    [830, 829],
    [831, 830],
    [832, 830],
    [833, 829],
    [834, 833],
    [835, 834],
    [836, 834],
    [837, 833],
    [838, 837],
    [839, 838],
    [840, 838],
    [841, 837],
    [842, 841],
    [843, 842],
    [844, 842],
    [845, 841],
    [846, 845],
    [847, 846],
    [848, 845],
    [849, 848],
    [850, 824],
    [851, 850],
    [852, 851],
    [853, 852],
    [854, 853],
    [855, 821],
    [856, 855],
    [857, 856],
    [858, 857],
    [859, 858],
    [860, 859],
    [861, 859],
    [862, 861],
    [863, 862],
    [864, 863],
    [865, 864],
    [866, 818],
    [867, 866],
    [868, 817],
    [869, 868],
    [870, 868],
    [871, 816],
    [872, 871],
    [873, 871],
    [874, 815],
    [875, 874],
    [876, 874],
    [877, 814],
    [878, 877],
    [879, 811],
    [880, 805],
    [881, 721],
    [882, 881],
    [883, 720],
    [884, 883],
    [885, 883],
    [886, 719],
    [887, 886],
    [888, 716],
    [889, 888],
    [890, 715],
    [891, 890],
    [892, 890],
    [893, 714],
    [894, 893],
    [895, 893],
    [896, 713],
    [897, 896],
    [898, 896],
    [899, 712],
    [900, 711],
    [901, 707],
    [902, 703],
    [904, 903],
    [905, 904],
    [906, 905],
    [907, 905],
    [908, 907],
    [909, 904],
    [910, 909],
    [911, 909],
    [912, 903],
    [913, 912],
    [915, 914],
    [917, 916],
    [919, 918],
    [920, 919],
    [921, 920],
    [922, 921],
    [923, 922],
    [924, 923],
    [925, 924],
    [926, 925],
    [927, 926],
    [928, 927],
    [929, 928],
    [930, 927],
    [931, 930],
    [932, 931],
    [933, 930],
    [934, 933],
    [935, 934],
    [936, 933],
    [937, 936],
    [938, 937],
    [939, 937],
    [940, 936],
    [941, 940],
    [942, 941],
    [943, 941],
    [944, 940],
    [945, 944],
    [946, 945],
    [947, 944],
    [948, 947],
    [949, 948],
    [950, 947],
    [951, 950],
    [952, 951],
    [953, 951],
    [954, 950],
    [955, 954],
    [956, 955],
    [957, 955],
    [958, 954],
    [959, 958],
    [960, 959],
    [961, 959],
    [962, 958],
    [963, 962],
    [964, 963],
    [965, 963],
    [966, 962],
    [967, 966],
    [968, 967],
    [969, 966],
    [970, 969],
    [971, 970],
    [972, 971],
    [973, 971],
    [974, 973],
    [975, 973],
    [976, 975],
    [977, 976],
    [978, 975],
    [979, 978],
    [980, 979],
    [981, 980],
    [982, 981],
    [983, 981],
    [984, 983],
    [985, 983],
    [986, 985],
    [987, 986],
    [988, 987],
    [989, 988],
    [990, 989],
    [991, 988],
    [992, 979],
    [993, 924],
    [994, 993],
    [995, 923],
    [996, 995],
    [997, 995],
    [998, 922],
    [999, 998],
    [1000, 919],
    [1002, 1001],
    [1004, 1003],
    [1005, 1004],
    [1006, 1005],
    [1007, 1006],
    [1008, 1007],
    [1009, 1008],
    [1010, 1009],
    [1011, 1010],
    [1012, 1010],
    [1013, 1012],
    [1014, 1013],
    [1015, 1014],
    [1016, 1015],
    [1017, 1016],
    [1018, 1015],
    [1019, 1008],
    [1020, 1019],
    [1021, 1019],
    [1022, 1007],
    [1023, 1022],
    [1024, 1004],
    [1026, 1025],
    [1027, 1026],
    [1028, 1027],
    [1029, 1028],
    [1030, 1029],
    [1031, 1030],
    [1032, 1031],
    [1033, 1032],
    [1034, 1032],
    [1035, 1034],
    [1036, 1035],
    [1037, 1036],
    [1038, 1037],
    [1039, 1038],
    [1040, 1037],
    [1041, 1030],
    [1042, 1041],
    [1043, 1041],
    [1044, 1029],
    [1045, 1044],
    [1047, 1046],
    [1048, 1047],
    [1049, 1048],
    [1050, 1049],
    [1051, 1050],
    [1052, 1051],
    [1053, 1052],
    [1054, 1053],
    [1055, 1053],
    [1056, 1055],
    [1057, 1056],
    [1058, 1057],
    [1059, 1058],
    [1060, 1059],
    [1061, 1058],
    [1062, 1051],
    [1063, 1062],
    [1064, 1062],
    [1065, 1050],
    [1066, 1065],
    [1067, 1047],
];
var path_point = [
    [53, -99, 105],
    [38, -99, 105],
    [22, -99, 105],
    [3, -99, 105],
    [-13, -99, 105],
    [-30, -99, 105],
    [-89, -99, 105],
    [-107, -99, 105],
    [-125, -99, 105],
    [-143, -99, 105],
    [-160, -99, 105],
    [-179, -99, 105],
    [-212, -75, 105],
    [-213, -63, 105],
    [174, -45, 105],
    [-212, -29, 105],
    [-213, -12, 105],
    [-212, 17, 105],
    [-213, 36, 105],
    [-213, 54, 105],
    [198, 57, 105],
    [198, 69, 105],
    [-213, 69, 105],
    [198, 100, 105],
    [165, 100, 105],
    [150, 100, 105],
    [131, 100, 105],
    [99, 100, 105],
    [85, 100, 105],
    [65, 100, 105],
    [48, 100, 105],
    [29, 100, 105],
    [-35, 100, 105],
    [-63, 100, 105],
    [-79, 100, 105],
    [-130, 100, 105],
    [-147, 100, 105],
    [-182, 100, 105],
    [-211, 100, 105],
    [-211, 117, 105],
    [53, -99, 75],
    [38, -99, 75],
    [22, -99, 75],
    [3, -99, 75],
    [-13, -99, 75],
    [-30, -99, 75],
    [-89, -99, 75],
    [-107, -99, 75],
    [-125, -99, 75],
    [-143, -99, 75],
    [-160, -99, 75],
    [-179, -99, 75],
    [169, -98, 75],
    [-213, -75, 75],
    [-213, -63, 75],
    [174, -45, 75],
    [-213, -29, 75],
    [-213, -12, 75],
    [-213, 17, 75],
    [-213, 36, 75],
    [-213, 54, 75],
    [197, 57, 75],
    [-213, 69, 75],
    [197, 71, 75],
    [198, 100, 75],
    [165, 100, 75],
    [150, 100, 75],
    [131, 100, 75],
    [99, 100, 75],
    [65, 100, 75],
    [29, 100, 75],
    [-35, 100, 75],
    [-63, 100, 75],
    [-79, 100, 75],
    [-130, 100, 75],
    [-147, 100, 75],
    [-182, 100, 75],
    [-211, 117, 75],
    [53, -99, 45],
    [38, -99, 45],
    [22, -99, 45],
    [3, -99, 45],
    [-13, -99, 45],
    [-30, -99, 45],
    [-89, -99, 45],
    [-107, -99, 45],
    [-125, -99, 45],
    [-143, -99, 45],
    [-160, -99, 45],
    [-179, -99, 45],
    [169, -98, 45],
    [-212, -75, 45],
    [-213, -63, 45],
    [174, -45, 45],
    [104, -33, 45],
    [-212, -29, 45],
    [-213, -12, 45],
    [182, 6, 45],
    [152, 9, 45],
    [-212, 17, 45],
    [-213, 36, 45],
    [-213, 54, 45],
    [196, 57, 45],
    [-213, 69, 45],
    [197, 71, 45],
    [198, 100, 45],
    [165, 100, 45],
    [150, 100, 45],
    [131, 100, 45],
    [99, 100, 45],
    [65, 100, 45],
    [29, 100, 45],
    [-35, 100, 45],
    [-63, 100, 45],
    [-79, 100, 45],
    [-130, 100, 45],
    [-147, 100, 45],
    [-182, 100, 45],
    [-212, 101, 45],
    [-211, 117, 45],
    [53, -99, 15],
    [38, -99, 15],
    [22, -99, 15],
    [3, -99, 15],
    [-13, -99, 15],
    [-30, -99, 15],
    [-89, -99, 15],
    [-107, -99, 15],
    [-125, -99, 15],
    [-143, -99, 15],
    [-160, -99, 15],
    [-179, -99, 15],
    [169, -98, 15],
    [132, -97, 15],
    [160, -59, 15],
    [128, -57, 15],
    [160, -35, 15],
    [128, -28, 15],
    [161, -12, 15],
    [160, 6, 15],
    [-212, 17, 15],
    [-213, 36, 15],
    [-213, 54, 15],
    [196, 57, 15],
    [-213, 69, 15],
    [197, 71, 15],
    [198, 100, 15],
    [165, 100, 15],
    [150, 100, 15],
    [131, 100, 15],
    [99, 100, 15],
    [85, 100, 15],
    [65, 100, 15],
    [48, 100, 15],
    [29, 100, 15],
    [-35, 100, 15],
    [-46, 100, 15],
    [-63, 100, 15],
    [-79, 100, 15],
    [-98, 100, 15],
    [-130, 100, 15],
    [-147, 100, 15],
    [-182, 100, 15],
    [-211, 117, 15],
    [137, 6, -15],
    [196, 57, -15],
    [197, 71, -15],
    [198, 100, -15],
    [165, 100, -15],
    [150, 100, -15],
    [131, 100, -15],
    [99, 100, -15],
    [85, 100, -15],
    [65, 100, -15],
    [48, 100, -15],
    [29, 100, -15],
    [-63, 100, -15],
    [-130, 100, -15],
    [137, 6, -45],
    [196, 57, -45],
    [197, 71, -45],
    [196, 57, -75],
    [197, 71, -75],
    [137, 6, -105],
    [196, 57, -105],
    [197, 71, -105],
];
var stair_point = [
    [-45, -101, 105],
    [-74, -101, 105],
    [-212, -100, 105],
    [87, -65, 105],
    [-179, -65, 105],
    [-212, 2, 105],
    [199, 39, 105],
    [166, 41, 105],
    [-212, 84, 105],
    [213, 101, 105],
    [181, 101, 105],
    [115, 101, 105],
    [15, 101, 105],
    [-14, 101, 105],
    [-114, 101, 105],
    [-45, -101, 75],
    [-74, -101, 75],
    [-212, -100, 75],
    [87, -65, 75],
    [-179, -65, 75],
    [-212, 2, 75],
    [104, 30, 75],
    [199, 39, 75],
    [-212, 84, 75],
    [213, 101, 75],
    [181, 101, 75],
    [115, 101, 75],
    [15, 101, 75],
    [-14, 101, 75],
    [-114, 101, 75],
    [-45, -101, 45],
    [-74, -101, 45],
    [-212, -100, 45],
    [87, -65, 45],
    [-179, -65, 45],
    [-212, 2, 45],
    [104, 30, 45],
    [199, 39, 45],
    [-212, 84, 45],
    [213, 101, 45],
    [181, 101, 45],
    [115, 101, 45],
    [15, 101, 45],
    [-14, 101, 45],
    [-114, 101, 45],
    [-45, -101, 15],
    [-74, -101, 15],
    [87, -65, 15],
    [-179, -65, 15],
    [-212, 2, 15],
    [104, 30, 15],
    [199, 39, 15],
    [-212, 84, 15],
    [213, 101, 15],
    [181, 101, 15],
    [115, 101, 15],
    [15, 101, 15],
    [-14, 101, 15],
    [-114, 101, 15],
    [104, 30, -15],
    [199, 39, -15],
    [213, 101, -15],
    [181, 101, -15],
    [115, 101, -15],
    [15, 101, -15],
    [-14, 101, -15],
    [-114, 101, -15],
    [104, 30, -45],
    [199, 39, -45],
    [104, 30, -75],
    [199, 39, -75],
    [104, 30, -105],
    [199, 39, -105],

];
// var point_status = new Array(path_point.length);
var path_line = [
    [30, 29],
    [29, 28],
    [28, 27],
    [27, 197],
    [197, 26],
    [26, 25],
    [25, 24],
    [24, 196],
    [196, 23],
    [23, 195],
    [195, 210],
    [210, 54],
    [54, 205],
    [205, 220],
    [220, 89],
    [89, 88],
    [88, 87],
    [87, 86],
];
var f = [-1, 1, 1, 1, 1, 1, 1, 1, 1]
var ori_graph = [];
var ori_path = [];
var ori_stair = [];
var look = [0, -1000, 0];
var move = 1;
var theta = Math.PI;
var alpha = 0;
var show = [];
var path_show = [];
var stair_show = [];
var mouse_last = [0, 0];
var graphpath = '.\\point.txt';
var linepath = '.\\edge.txt';
var Floor = [];
var wifiFloor = [];
var stairFloor = [];

function getMousePos(canvas, evt) {
    var rect = canvas.getBoundingClientRect();
    return {
        x: evt.clientX - rect.left,
        y: evt.clientY - rect.top
    };
}

function angle_of_vision(point, watcher) {
    var vec = [point[0] - watcher[0], point[1] - watcher[1], point[2] - watcher[2]]
    var k = watcher[1] / vec[1] * -1;
    var ret = [0, 0, 0];
    for (let i = 0; i < 3; i++) {
        ret[i] = watcher[i] + vec[i] * k;
    }
    return ret;

}

// function get_ip(url, cb) {
//     var httpRequest = new XMLHttpRequest();
//     httpRequest.open('GET', url, true);
//     httpRequest.send();
//     httpRequest.onreadystatechange = function() {
//         if (httpRequest.readyState == 4 && httpRequest.status == 200) {
//             var json = httpRequest.responseText;
//             cb(json);
//         }
//     };
// }

function show_up() {
    for (let i = 0; i < show.length; i++) {
        if (f[Floor[i]]) {
            ctx.beginPath();
            ctx.fillStyle = "#000000";
            ctx.strokeStyle = "#000000";
            ctx.arc(origin[0] + show[i][0], origin[1] + show[i][2], 1, 0, 2 * Math.PI);
            ctx.fill();
            ctx.stroke();
        }
    }
    for (let i = 0; i < line.length; i++) {
        if (f[Floor[line[i][0]]] && f[Floor[line[i][1]]]) {
            ctx.beginPath();
            ctx.moveTo(origin[0] + show[line[i][0]][0], origin[1] + show[line[i][0]][2]);
            ctx.lineTo(origin[0] + show[line[i][1]][0], origin[1] + show[line[i][1]][2]);
            ctx.strokeStyle = "#000000";
            ctx.stroke();
        }
    }

    if (havepath) {

        for (let i = 0; i < path_line.length; i++) {
            for (let j = 0; j < 2; j++) {
                var tmp = [];
                if (path_line[i][j] < path_show.length) {
                    tmp = path_show[path_line[i][j]];
                } else {
                    tmp = stair_show[path_line[i][j] - path_show.length];
                }
                if (f[wifiFloor[path_line[i][j]]] /*&& !point_status[i]*/ ) {
                    if (move > 0.4) {
                        ctx.beginPath();
                        ctx.fillStyle = "#AA00AA";
                        ctx.strokeStyle = "#AA00AA";
                        ctx.arc(origin[0] + tmp[0], origin[1] + tmp[2], Math.min(2 * move, 3), 0, 2 * Math.PI);
                        ctx.fill();
                        ctx.stroke();
                    }
                }
            }
        }
    } else {
        for (let i = 0; i < stair_show.length; i++) {
            if (f[stairFloor[i]]) {
                if (move > 0.4) {
                    ctx.beginPath();
                    ctx.fillStyle = "#7E654C";
                    ctx.strokeStyle = "#7E654C";
                    ctx.arc(origin[0] + stair_show[i][0], origin[1] + stair_show[i][2], Math.min(2 * move, 3), 0, 2 * Math.PI);
                    ctx.fill();
                    ctx.stroke();
                }
            }
        }
        for (let i = 0; i < path_show.length; i++) {
            if (f[wifiFloor[i]] /*&& !point_status[i]*/ ) {
                if (move > 0.4) {
                    ctx.beginPath();
                    ctx.fillStyle = "#AA00AA";
                    ctx.strokeStyle = "#AA00AA";
                    ctx.arc(origin[0] + path_show[i][0], origin[1] + path_show[i][2], Math.min(2 * move, 3), 0, 2 * Math.PI);
                    ctx.fill();
                    ctx.stroke();
                }
            }
        }
    }

    for (let i = 0; i < path_line.length; i++) {
        if (f[wifiFloor[line[i][0]]] && f[wifiFloor[line[i][1]]] /*&& !point_status[line[i][0]] && !point_status[line[i][1]] */ ) {
            ctx.beginPath();
            var tmp = [];
            if (path_line[i][0] < path_show.length) {
                tmp = path_show[path_line[i][0]];
            } else {
                tmp = stair_show[path_line[i][0] - path_show.length];
            }
            ctx.moveTo(origin[0] + tmp[0], origin[1] + tmp[2]);
            if (path_line[i][1] < path_show.length) {
                tmp = path_show[path_line[i][1]];
            } else {
                tmp = stair_show[path_line[i][1] - path_show.length];
            }
            ctx.lineTo(origin[0] + tmp[0], origin[1] + tmp[2]);
            ctx.strokeStyle = "#AA0000";
            ctx.stroke();
        }
    }
}
var origin = [540, 360]

for (let i = 0; i < graph.length; i++) {
    Floor.push((graph[i][2] - 135) / (-30));
    show.push(angle_of_vision(graph[i], look));
    ori_graph.push(graph[i]);
}
for (let i = 0; i < stair_point.length; i++) {
    stairFloor.push((stair_point[i][2] - 135) / (-30));
    stair_show.push(angle_of_vision(stair_point[i], look));
    ori_stair.push(stair_point[i]);
}
for (let i = 0; i < path_point.length; i++) {
    wifiFloor.push((path_point[i][2] - 135) / (-30));
    path_show.push(angle_of_vision(path_point[i], look));
    ori_path.push(path_point[i]);
}
show_up();
var user_ip;

// user_ip = <%= ins %>;

// get_ip("https://api.ipify.org/?format=json", function(data) {
//     data = JSON.parse(data);
//     user_ip = data.ip;
//     console.log(user_ip);
// });
var delta_x = 0,
    delta_y = 0;
var press = 0;
var havepath = 0;

function Update() {
    ctx.clearRect(0, 0, 1080, 720);
    theta = (delta_x) * Math.PI / 120
    alpha = (delta_y * -1) * Math.PI / 240
    var x = 0,
        y = 0,
        z = 0;
    for (let i = 0; i < graph.length; i++) {
        x = graph[i][0]
        y = graph[i][1]
        z = graph[i][2]
        x = Math.cos(theta) * graph[i][0] - Math.sin(theta) * graph[i][1]
        y = Math.sin(theta) * graph[i][0] + Math.cos(theta) * graph[i][1]
        graph[i] = [x, y, z]
        y = Math.cos(alpha) * graph[i][1] - Math.sin(alpha) * graph[i][2]
        z = Math.sin(alpha) * graph[i][1] + Math.cos(alpha) * graph[i][2]
        graph[i] = [x, y, z]
        x *= move
        y *= move
        z *= move
        show[i] = angle_of_vision([x, y, z], look)
    }
    for (let i = 0; i < path_point.length; i++) {
        x = path_point[i][0]
        y = path_point[i][1]
        z = path_point[i][2]
        x = Math.cos(theta) * path_point[i][0] - Math.sin(theta) * path_point[i][1]
        y = Math.sin(theta) * path_point[i][0] + Math.cos(theta) * path_point[i][1]
        path_point[i] = [x, y, z]
        y = Math.cos(alpha) * path_point[i][1] - Math.sin(alpha) * path_point[i][2]
        z = Math.sin(alpha) * path_point[i][1] + Math.cos(alpha) * path_point[i][2]
        path_point[i] = [x, y, z]
        x *= move
        y *= move
        z *= move
        path_show[i] = angle_of_vision([x, y, z], look)
    }
    for (let i = 0; i < stair_point.length; i++) {
        x = stair_point[i][0]
        y = stair_point[i][1]
        z = stair_point[i][2]
        x = Math.cos(theta) * stair_point[i][0] - Math.sin(theta) * stair_point[i][1]
        y = Math.sin(theta) * stair_point[i][0] + Math.cos(theta) * stair_point[i][1]
        stair_point[i] = [x, y, z]
        y = Math.cos(alpha) * stair_point[i][1] - Math.sin(alpha) * stair_point[i][2]
        z = Math.sin(alpha) * stair_point[i][1] + Math.cos(alpha) * stair_point[i][2]
        stair_point[i] = [x, y, z]
        x *= move
        y *= move
        z *= move
        stair_show[i] = angle_of_vision([x, y, z], look)
    }
    show_up();
    theta = 0;
    alpha = 0;
    delta_x = 0;
    delta_y = 0;
}

function switch_floor(fl) {
    f[fl] = !f[fl];
    Update();
    var ans = " ";
    for (var i = 1; i <= 8; i++) {
        ans += (f[i] ? "show " : "invis") + " ";
    }
    document.getElementById("fword").textContent = ans;
}

function reset() {
    move = 1;
    mouse_last = [0, 0];
    theta = Math.PI;
    alpha = 0;
    delta_x = 0;
    delta_y = 0;
    havepath = 0;
    path_line = [];
    graph = [];
    path_point = [];
    stair_point = [];
    for (let i = 0; i < ori_graph.length; i++) {
        graph.push(ori_graph[i]);
    }
    for (let i = 0; i < ori_path.length; i++) {
        path_point.push(ori_path[i]);
    }
    for (let i = 0; i < ori_stair.length; i++) {
        stair_point.push(ori_stair[i]);
    }
    f = [-1, 1, 1, 1, 1, 1, 1, 1, 1];
    // for (let i = 0; i < point_status.length; i++) point_status[i] = false;
    var ans = " ";
    for (var i = 1; i <= 8; i++) {
        ans += (f[i] ? "show " : "invis") + " ";
    }
    document.getElementById("fword").textContent = ans;
    Update();
}

function syncDelay(milliseconds) {
    var start = new Date().getTime();
    var end = 0;
    while ((end - start) < milliseconds) {
        end = new Date().getTime();
    }
}

function resize(evt) {
    evt.preventDefault();
    move += -0.001 * evt.deltaY;
    move = Math.min(10, move);
    move = Math.max(0, move);
    Update();
}

function draw(evt) {
    document.onmousedown = function(e) {
        press = 1;
    }
    if (press) {
        var mouse_now = [getMousePos(canva, evt).x, getMousePos(canva, evt).y];
        delta_x = mouse_now[0] - mouse_last[0];
        delta_y = mouse_now[1] - mouse_last[1];
        mouse_last = mouse_now;
        Update()
    } else {
        mouse_last = [getMousePos(canva, evt).x, getMousePos(canva, evt).y];
    }
    document.onmouseup = function(e) {
        press = 0;
    }
}

// for (let i = 0; i < point_status.length; i++) point_status[i] = false;

// function setpoint() {
//     var input = document.getElementsByName('point')[0]
//     var value = input.value
//     point_status[value] = !point_status[value]
//     Update()
// }
document.addEventListener('drag', draw)

var floor_canva = document.getElementById("floor");
var floor_ctx = floor_canva.getContext("2d");
var wantto = -1;
var floor_origin = [222, 136];
var now_floor = 0;

function inpoint(mouse, point) {
    if (Math.abs(mouse[0] - (floor_origin[0] - point[0])) <= 10 && Math.abs(mouse[1] - (floor_origin[1] + point[1])) <= 10) {
        return true;
    }
    return false;
}
var target_status;

function floor_click(evt) {
    var mouse = [0, 0];
    var choose = 0;
    var choosestair = 0;
    mouse = [getMousePos(floor_canva, evt).x, getMousePos(floor_canva, evt).y];
    for (let i = 0; i < ori_path.length; i++) {
        if (wifiFloor[i] == now_floor) {
            if (inpoint(mouse, ori_path[i])) {
                wantto = i;
                choose = 1;
                break;
            }
        }
    }
    if (!choose) {
        for (let i = 0; i < ori_stair.length; i++) {
            if (stairFloor[i] == now_floor) {
                if (inpoint(mouse, ori_stair[i])) {
                    wantto = i;
                    choosestair = 1;
                    break;
                }
            }
        }
        if (!choosestair)
            wantto = -1;
        else {
            target_status = 1;
            console.log("stair %d", wantto);
            ws.send(wantto + ori_path.length);
            havepath = 1;
        }
    } else {
        target_status = 0;
        console.log("wifi %d", wantto);
        ws.send(wantto);
        havepath = 1;
    }
    Update();
}


function show_up_floor(choose_floor) {
    now_floor = choose_floor
    console.log(choose_floor);
    floor_ctx.clearRect(0, 0, 445, 272);
    for (let i = 0; i < ori_graph.length; i++) {
        if (Floor[i] == choose_floor) {
            floor_ctx.beginPath();
            floor_ctx.fillStyle = "#000000";
            floor_ctx.strokeStyle = "#000000";
            floor_ctx.arc(floor_origin[0] - ori_graph[i][0], floor_origin[1] + ori_graph[i][1], 1, 0, 2 * Math.PI);
            floor_ctx.fill();
            floor_ctx.stroke();
        }
    }
    for (let i = 0; i < line.length; i++) {
        if (Floor[line[i][0]] == choose_floor && Floor[line[i][1]] == choose_floor) {
            floor_ctx.beginPath();
            floor_ctx.moveTo(floor_origin[0] - ori_graph[line[i][0]][0], floor_origin[1] + ori_graph[line[i][0]][1]);
            floor_ctx.lineTo(floor_origin[0] - ori_graph[line[i][1]][0], floor_origin[1] + ori_graph[line[i][1]][1]);
            floor_ctx.strokeStyle = "#000000";
            floor_ctx.stroke();
        }
    }
    for (let i = 0; i < ori_stair.length; i++) {
        if (stairFloor[i] == choose_floor) {
            floor_ctx.beginPath();
            floor_ctx.fillStyle = "#7E654C";
            floor_ctx.strokeStyle = "#7E654C";
            floor_ctx.arc(floor_origin[0] - ori_stair[i][0], floor_origin[1] + ori_stair[i][1], 2, 0, 2 * Math.PI);
            floor_ctx.fill();
            floor_ctx.stroke();
        }
    }
    for (let i = 0; i < ori_path.length; i++) {
        if (wifiFloor[i] == choose_floor) {
            floor_ctx.beginPath();
            floor_ctx.fillStyle = "#AA00AA";
            floor_ctx.strokeStyle = "#AA00AA";
            floor_ctx.arc(floor_origin[0] - ori_path[i][0], floor_origin[1] + ori_path[i][1], 2, 0, 2 * Math.PI);
            floor_ctx.fill();
            floor_ctx.stroke();
        }
    }
    for (let i = 0; i < path_line.length; i++) {
        var temp = [];
        if (path_line[i][0] < ori_path.length) {
            temp.push(wifiFloor);
        } else {
            temp.push(stairFloor);
        }
        if (path_line[i][1] < ori_path.length) {
            temp.push(wifiFloor);
        } else {
            temp.push(stairFloor);
        }
        if (temp[0][path_line[i][0] - (path_line[i][0] < ori_path.length ? 0 : ori_path.length)] == choose_floor && temp[1][path_line[i][1] - (path_line[i][1] < ori_path.length ? 0 : ori_path.length)] == choose_floor) {
            floor_ctx.beginPath();
            var tmp = [];
            if (path_line[i][0] < ori_path.length) {
                tmp = ori_path[path_line[i][0]];
            } else {
                tmp = ori_stair[path_line[i][0] - ori_path.length];
            }
            floor_ctx.moveTo(floor_origin[0] - tmp[0], floor_origin[1] + tmp[1]);
            if (path_line[i][1] < ori_path.length) {
                tmp = ori_path[path_line[i][1]];
            } else {
                tmp = ori_stair[path_line[i][1] - ori_path.length];
            }
            floor_ctx.lineTo(floor_origin[0] - tmp[0], floor_origin[1] + tmp[1]);
            floor_ctx.strokeStyle = "#AA0000";
            floor_ctx.stroke();
        }
    }

}
let url = `ws://${window.location.host}`

function handlePath(event) {
    let path = event.data.toString().split(" ");
    path_line = [];
    for (let i = 1; i < path.length - 2; i++) {
        path_line.push([Number(path[i]), Number(path[i + 1])])
    }
    Update();
}

var ws = new WebSocket(url)
ws.onopen = () => {
    var clock = setInterval(() => {
        if (ws.readyState === ws.CLOSED) {
            ws = new WebSocket(url)
            ws.onmessage = handlePath
        } else {
            ws.send(wantto - (target_status ? path_point.length : 0))
        }
    }, 3000);

    ws.onmessage = handlePath
}